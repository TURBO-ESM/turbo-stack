name: Build Inside NCAR HPC Development Containers

# See the following link for more information on the NCAR HPC development containers:
# https://hub.docker.com/u/ncarcisl

on:
  workflow_dispatch:
  push:
    branches: ["main", "ci-tests", "container-ci"]
  pull_request:
    branches: ["main", "ci-tests", "container-ci"]

jobs:

  run-matrix:
    strategy:
      fail-fast: false
      matrix:
        compiler: [ nvhpc, oneapi, gcc14, clang ]
        mpi:      [ openmpi, mpich ]
        #gpu:      [ nogpu, cuda ]
        gpu:      [ nogpu ]
        arch:     [ x86_64 ]
        runner:   [ ubuntu-latest, gha-runner-turbo ]

    name: Build
    runs-on: ${{ matrix.runner }}
    defaults:
      run:
        shell: bash -elo pipefail {0}

    container:
      image: ncarcisl/hpcdev-${{ matrix.arch }}:almalinux9-${{ matrix.compiler }}-${{ matrix.mpi }}${{ matrix.gpu == 'cuda' && '-cuda' || '' }}-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Interrogate Runtime Environment
        run: |
          cat /container/config_env.sh
          lscpu
          echo && echo && echo
          echo '----------------------------------------------------------------'
          echo && echo && echo
          echo "CC=${CC}"
          echo "CXX=${CXX}"
          echo "FC=${FC}"
          echo "F77=${F77}"
          echo
          echo "CFLAGS=${CFLAGS}"
          echo "CPPFLAGS=${CPPFLAGS}"
          echo "CXXFLAGS=${CXXFLAGS}"
          echo "FCFLAGS=${FCFLAGS}"
          echo "F77FLAGS=${F77FLAGS}"
          export CC CXX FC F77 CFLAGS CXXFLAGS FCFLAGS F77FLAGS CPPFLAGS
          conda --version 2>/dev/null || echo " --> no conda in this container"
          which mpicc
          mpicc --version 2>/dev/null || true

      - name: MPI+OpenMP Hello World
        run: |
          mpicxx -o ./hello_world_mpi /container/extras/hello_world_mpi.cxx -fopenmp
          ldd ./hello_world_mpi
          export OMP_NUM_THREADS=2
          mpiexec -n 2 ./hello_world_mpi

      - name: Build turbo-stack
        run: |
          echo "Building turbo-stack..."
          ./build.sh --machine container --compiler ${COMPILER_FAMILY}

      - name: Run double gyre test
        run: |
          echo "Running double gyre test..."
          cd ./examples/double_gyre
          mpiexec -n 2 ../../bin/${COMPILER_FAMILY}/MOM6/MOM6
